// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectBackend.DataContext;

namespace ProjectBackend.Migrations
{
    [DbContext(typeof(BeerContext))]
    [Migration("20210429185754_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("ProjectBackend.Models.Beer", b =>
                {
                    b.Property<int>("BeerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BitternessId")
                        .HasColumnType("int");

                    b.Property<int>("BrewerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Percentage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BeerId");

                    b.HasIndex("BitternessId");

                    b.HasIndex("BrewerId");

                    b.ToTable("Beer");

                    b.HasData(
                        new
                        {
                            BeerId = 1,
                            BitternessId = 1,
                            BrewerId = 1,
                            Name = "Stella Artois",
                            Origin = "Leuven",
                            Percentage = "5.2"
                        },
                        new
                        {
                            BeerId = 2,
                            BitternessId = 2,
                            BrewerId = 2,
                            Name = "Jupiler",
                            Origin = "Jupille-sur-Meuse",
                            Percentage = "5.2"
                        },
                        new
                        {
                            BeerId = 3,
                            BitternessId = 1,
                            BrewerId = 1,
                            Name = "Heineken",
                            Origin = "Amsterdam",
                            Percentage = "5"
                        });
                });

            modelBuilder.Entity("ProjectBackend.Models.BeerUser", b =>
                {
                    b.Property<int>("BeerId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<Guid>("BeerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BeerId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("BeerUser");

                    b.HasData(
                        new
                        {
                            BeerId = 1,
                            UserId = 1,
                            BeerUserId = new Guid("b5e82d11-a5f8-425d-b3c2-dda710fbdcbb")
                        },
                        new
                        {
                            BeerId = 2,
                            UserId = 1,
                            BeerUserId = new Guid("4cf44a0a-397d-4dcd-a556-cf7ca4fe7919")
                        },
                        new
                        {
                            BeerId = 3,
                            UserId = 1,
                            BeerUserId = new Guid("f7c22c1b-f740-45b3-b77d-5f884aae7f63")
                        });
                });

            modelBuilder.Entity("ProjectBackend.Models.Bitterness", b =>
                {
                    b.Property<int>("BitternessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AmountIBU")
                        .HasColumnType("int");

                    b.HasKey("BitternessId");

                    b.ToTable("Bitterness");

                    b.HasData(
                        new
                        {
                            BitternessId = 1,
                            AmountIBU = 25
                        },
                        new
                        {
                            BitternessId = 2,
                            AmountIBU = 20
                        });
                });

            modelBuilder.Entity("ProjectBackend.Models.Brewer", b =>
                {
                    b.Property<int>("BrewerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("HeadOffice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrewerId");

                    b.ToTable("Brewer");

                    b.HasData(
                        new
                        {
                            BrewerId = 1,
                            HeadOffice = "Leuven",
                            Name = "AB InBev"
                        },
                        new
                        {
                            BrewerId = 2,
                            HeadOffice = "Luik",
                            Name = "Piedboeuf"
                        });
                });

            modelBuilder.Entity("ProjectBackend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Firstname = "Thibault",
                            Name = "D'Haese"
                        },
                        new
                        {
                            UserId = 2,
                            Firstname = "Robin",
                            Name = "Claeys"
                        },
                        new
                        {
                            UserId = 3,
                            Firstname = "Niels",
                            Name = "Onderbeke"
                        });
                });

            modelBuilder.Entity("ProjectBackend.Models.Beer", b =>
                {
                    b.HasOne("ProjectBackend.Models.Bitterness", "Bitterness")
                        .WithMany("Beer")
                        .HasForeignKey("BitternessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectBackend.Models.Brewer", "Brewer")
                        .WithMany("Beer")
                        .HasForeignKey("BrewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bitterness");

                    b.Navigation("Brewer");
                });

            modelBuilder.Entity("ProjectBackend.Models.BeerUser", b =>
                {
                    b.HasOne("ProjectBackend.Models.Beer", "Beer")
                        .WithMany("BeerUser")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectBackend.Models.User", "User")
                        .WithMany("BeerUser")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectBackend.Models.Beer", b =>
                {
                    b.Navigation("BeerUser");
                });

            modelBuilder.Entity("ProjectBackend.Models.Bitterness", b =>
                {
                    b.Navigation("Beer");
                });

            modelBuilder.Entity("ProjectBackend.Models.Brewer", b =>
                {
                    b.Navigation("Beer");
                });

            modelBuilder.Entity("ProjectBackend.Models.User", b =>
                {
                    b.Navigation("BeerUser");
                });
#pragma warning restore 612, 618
        }
    }
}
